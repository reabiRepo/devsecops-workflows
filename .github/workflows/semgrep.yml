name: Reusable - Semgrep & upload SARIF

on:
  workflow_call:
    inputs:
      semgrep_config:
        description: "Chemin ou URL des règles Semgrep"
        required: false
        default: "p/ci"
        type: string
      exclude:
        description: "Glob patterns à exclure de l'analyse"
        required: false
        default: ""
        type: string

permissions:
  contents: read
  security-events: write

jobs:
  semgrep:
    name: Static Scan with Semgrep
    runs-on: ubuntu-latest  # Compatible Windows, Linux, macOS (via GitHub runners)

    steps:
      - name: Afficher l'environnement du runner
        run: |
          echo "Runner Name: $RUNNER_NAME"
          echo "OS: $RUNNER_OS"
          echo "Architecture: $RUNNER_ARCH"
          echo "Runner Labels: $RUNNER_LABELS"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Semgrep (version épinglée)
        run: pip install semgrep==1.62.0

      - name: Run Semgrep
        continue-on-error: true  # Permet de générer le rapport même si des vulnérabilités sont détectées
        env:
          SEMGREP_CONFIG: ${{ inputs.semgrep_config }}
        run: |
          semgrep --config "$SEMGREP_CONFIG" --exclude '${{ inputs.exclude }}' --sarif > semgrep.sarif

      - name: Upload SARIF to GitHub Advanced Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

      - name: Afficher le contenu SARIF (debug facultatif)
        if: always()
        run: |
          cat semgrep.sarif
